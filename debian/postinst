#!/bin/bash
# see: dh_installdeb(1)
# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

function isValidSymlink() {
    if [ -L "$1" ]; then
        return 0
    else
        return 1
    fi
}

if systemctl is-masked var-log-wlanpi_core-debug.mount >/dev/null 2>&1; then
    echo "Unmasking var-log-wlanpi_core-debug.mount..."
    systemctl unmask var-log-wlanpi_core-debug.mount || true
fi

# get python version, remove spaces, get Python3.7 or Python3.9, lowercase
PYTHONSTUB=$(python3 -V 2>&1 | sed 's/ //g' | grep -oP '(\w+\.\d+)' | tr 'P' 'p')

# the actual target working directory (this is a workaround so we can support multiple Python versions at build)
TARGET_DIR=/opt/wlanpi-core/lib/$PYTHONSTUB/site-packages/wlanpi_core

# this is the parent directory which holds our linked working directory
LINK=/opt/wlanpi-core/workingdirectory

# this is the path that we need to check if is already a link
TEST_PATH=/opt/wlanpi-core/workingdirectory/wlanpi_core

# if link doesn't exist, create it
if ! isValidSymlink $TEST_PATH; then
    ln -sf "$TARGET_DIR" "$LINK"
fi

CONF_CHANGED=1

# Ensure nginx sites-enabled directory exists
mkdir -p /etc/nginx/sites-enabled

# if source configuration file exists, create symlink
WLANPI_CORE=/etc/nginx/sites-enabled/wlanpi_core.conf
SOURCE_CONF=/etc/wlanpi-core/nginx/sites-enabled/wlanpi_core.conf

if [ -f "$SOURCE_CONF" ]; then
    ln -sf "$SOURCE_CONF" "$WLANPI_CORE" || true
    CONF_CHANGED=0
else
    echo "Warning: source nginx site configuration at $SOURCE_CONF not found"
fi

if [ $CONF_CHANGED -eq 0 ]; then
    echo "Restarting wlanpi-core ..."
    systemctl start var-log-wlanpi_core-debug.mount || true
    deb-systemd-invoke restart wlanpi-core.service
fi

if ! iptables -C ufw-user-input -p tcp --dport 31415 -j ACCEPT 2>/dev/null; then
    iptables -I ufw-user-input -p tcp --dport 31415 -j ACCEPT
    echo "[Network] TCP port 31415: Firewall rule successfully configured."
fi

if ! iptables -C ufw-user-input -p udp --dport 31415 -j ACCEPT 2>/dev/null; then
    iptables -I ufw-user-input -p udp --dport 31415 -j ACCEPT
    echo "[Network] UDP port 31415: Firewall rule successfully configured."
fi

if [ -f /usr/bin/getjwt ]; then
    chmod 755 /usr/bin/getjwt
fi

if [ -f /usr/bin/lhapitest ]; then
    chmod 755 /usr/bin/lhapitest
fi

exit 0
