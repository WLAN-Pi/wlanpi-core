#!/usr/bin/make -f
# -*- makefile -*-

export DH_VIRTUALENV_INSTALL_ROOT=/opt
export PYBUILD_NAME=wlanpi-core

PACKAGE=$(shell dh_listpackages)
VERSION=$(shell parsechangelog | grep ^Version: | sed -re 's/[^0-9]+([^-]+).*/\1/')

SNAKE=/usr/bin/python3

DH_VENV_DIR=debian/$(PACKAGE)$(DH_VIRTUALENV_INSTALL_ROOT)/$(PACKAGE)

DBUS_PYTHON_SPEC=$(shell grep dbus-python== requirements.txt)
DBUS_VERSION=$(shell grep dbus-python== requirements.txt | cut -d '=' -f3)
PKG_PREFIX=debian/wlanpi-core
SDIST_DIR=debian/$(PACKAGE)-$(VERSION)

%:
	dh $@ --with python-virtualenv --buildsystem=pybuild

.PHONY: override_dh_virtualenv override_dh_installexamples 

# ensure that the systemd services are handled by systemd.
override_dh_installsystemd:
	dh_installsystemd --name=wpa_supplicant@wlan0 wpa_supplicant@wlan0.service
	dh_installsystemd wlanpi-core.service
	dh_installsystemd wlanpi-core.socket
	dh_installsystemd wlanpi-core-debug.mount

# we don't really want to strip the symbols from our object files.
override_dh_strip:

# we don't really want dwz to do anything to our files.
override_dh_dwz:

override_dh_installexamples:
	dh_installexamples -A -X__pycache__

override_dh_virtualenv:
	dh_virtualenv \
		--install-suffix "wlanpi-core" \
		--builtin-venv \
		--python ${SNAKE} \
		--upgrade-pip-to=23.2 \
		--preinstall="setuptools==65.5.0" \
		--preinstall="wheel==0.37.1"
		--preinstall="mock" \
		--extra-pip-arg="--compile" \
		--extras="all,systemd,test"
	
	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip cache purge --verbose
	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip download $(DBUS_PYTHON_SPEC) --no-binary dbus-python ${DBUS_PYTHON_SPEC} --verbose
	$(DH_VENV_DIR)/bin/python $(DH_VENV_DIR)/bin/pip install dbus-python-$(DBUS_VERSION).tar.gz --verbose

